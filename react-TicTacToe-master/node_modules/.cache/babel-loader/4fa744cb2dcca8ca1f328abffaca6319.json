{"ast":null,"code":"import _slicedToArray from \"D:\\\\React\\\\TicTacToeTwo-master\\\\TicTacToeTwo-master\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\React\\\\TicTacToeTwo-master\\\\TicTacToeTwo-master\\\\src\\\\App.js\";\nimport './App.css';\nimport React, { Component } from 'react';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: Array(9).fill(null),\n      player: \"X\",\n      winner: null\n    };\n  }\n\n  checkWinner() {\n    let winLines = [[\"0\", \"1\", '2'], [\"3\", \"4\", '5'], [\"6\", \"7\", '8'], [\"0\", \"3\", '6'], [\"1\", \"4\", '7'], [\"2\", \"5\", '8'], [\"0\", \"4\", '8'], [\"2\", \"4\", '6']];\n\n    for (let index = 0; index < winLines.lenght; index++) {\n      const _winLines$index = _slicedToArray(winLines[index], 3),\n            a = _winLines$index[0],\n            b = _winLines$index[1],\n            c = _winLines$index[2];\n\n      if (this.state.board[a] && this.state.board[a] === this.state.board[b] && this.state.board[a] === this.state.board[c]) {\n        alert('You won');\n        this.setState({\n          winner: this.state.player\n        });\n      }\n    }\n  }\n\n  handleClick(index) {\n    let newBoard = this.state.board;\n\n    if (this.state.board[index] === null) {\n      newBoard[index] = this.state.player;\n      this.setState({\n        board: newBoard,\n        player: this.state.player === \"X\" ? \"0\" : \"X\"\n      });\n      this.checkWinner();\n    }\n  }\n\n  render() {\n    const Box = this.state.board.map((box, index) => React.createElement(\"div\", {\n      className: \"box\",\n      key: index,\n      onClick: e => this.handleClick(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \" \", box));\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, \"TicTacToe\"), React.createElement(\"div\", {\n      className: \"board\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, Box));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:\\React\\TicTacToeTwo-master\\TicTacToeTwo-master\\src\\App.js"],"names":["React","Component","App","constructor","props","state","board","Array","fill","player","winner","checkWinner","winLines","index","lenght","a","b","c","alert","setState","handleClick","newBoard","render","Box","map","box","e"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport React, { Component } from 'react'\n\nclass App extends Component {\n\n constructor(props) {\n\n   super(props)\n\n   this.state = {\n\n     board : Array(9).fill(null),\n    \n     player: \"X\",\n\n     winner: null\n\n    }\n\n  }\n\n  checkWinner(){\n\n     let winLines = \n  \n    [\n      [\"0\",\"1\",'2'],\n\n      [\"3\",\"4\",'5'],\n\n      [\"6\",\"7\",'8'],\n\n      [\"0\",\"3\",'6'],\n\n      [\"1\",\"4\",'7'],\n\n      [\"2\",\"5\",'8'],\n\n      [\"0\",\"4\",'8'],\n\n      [\"2\",\"4\",'6'],\n    ]\n\n    for (let index = 0; index < winLines.lenght; index++) {\n\n      const [a, b, c] = winLines[index];\n\n\n      if ( this.state.board[a] && this.state.board[a] === this.state.board[b] && this.state.board[a] === this.state.board[c]){\n        \n        alert('You won');\n        \n        this.setState({\n\n          winner: this.state.player\n\n        })\n      \n      }\n\n    }\n    \n    \n  }\n\n handleClick(index) {\n  \n   let newBoard = this.state.board\n\n   if (this.state.board[index] === null) {\n\n    newBoard[index] = this.state.player\n\n    this.setState({\n\n    board: newBoard,\n\n    player: this.state.player === \"X\" ? \"0\" : \"X\"\n\n    })\n\n\n    this.checkWinner()\n   }\n\n\n  }\n\n\n render() {\n\n  const Box = this.state.board.map(\n    \n    (box, index) =>\n  \n    <div className=\"box\" key={index} \n   \n   onClick={(e) => this.handleClick(index)}> {box}\n   \n    </div>)\n\n   return (\n\n     <div className=\"container\">\n      <h1>TicTacToe</h1>\n    \n      <div className=\"board\">\n  \n        {Box}\n       \n      </div>\n     </div>\n \n    );\n\n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}